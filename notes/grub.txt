
    insmod part_gpt
    insmod part_msdos
    insmod chain
    set root=(hd1,gpt6)
    chainloader /efi/grub/grubx64.efi
    boot


### https://en.wikipedia.org/wiki/GNU_GRUB
### https://wiki.archlinux.org/index.php/GRUB

### https://wiki.gentoo.org/wiki/GRUB2

    menuentry "Custom Super Bootloader Example" {
         insmod part_msdos
         insmod chain
         chainloader (hd1,1)+1
    }

###
modprobe efivars
efibootmgr -v

### /etc/grub.d/40_custom 

    menuentry "bootmgr.vhd" {
        linux16 /boot/memdisk harddisk
        initrd16 (hd0,gpt4)/boot/bootmgr.vhd
    }

    menuentry "Windows 10" {
         insmod ntfs
         insmod ntldr
         insmod part_msdos
         insmod search_fs_uuid
         search --no-floppy --fs-uuid --set=root C68011F58011ECA5
         ntldr /bootmgr
    }

    menuentry 'Windows GPT bootmgr wimboot' {
        linux16 /wimboot
        initrd16 newc:bootmgr:(hd0,gpt1)/bootmgr newc:bcd:(hd0,gpt1)/Boot/BCD
    }


### https://unix.stackexchange.com/questions/289034/how-to-create-a-bootable-flash-that-can-boot-as-both-bios-and-uefi

    parted /dev/sdX -- mktable gpt
    parted /dev/sdX -- mkpart biosgrub fat32 1MiB 4MiB
    parted /dev/sdX -- mkpart efi fat32 4MiB 200MiB
    parted /dev/sdX -- set 1 bios_grub on
    parted /dev/sdX -- set 2 esp on
    mkfs.vfat -F 32 -n EFI /dev/sdX2

    mkdir /tmp/new-boot && mount /dev/sdX2 /tmp/new-boot
    grub-install --removable --no-nvram --efi-directory=/tmp/new-boot/ --boot-directory=/tmp/new-boot/ --target=x86_64-efi
    grub-install --removable --no-nvram --efi-directory=/tmp/new-boot/ --boot-directory=/tmp/new-boot/ --target=i386-efi
    grub-install --removable --boot-directory=/tmp/new-boot/ --target=i386-pc /dev/sdX

