### https://developer.android.com/ndk/guides/standalone_toolchain.html

cd /opt/android/ndk/

build/tools/make_standalone_toolchain.py --help
build/tools/make_standalone_toolchain.py --arch=arm   --api=17 --stl=gnustl --install-dir=/opt/android/17-arm-gcc-4.9
build/tools/make_standalone_toolchain.py --arch arm64 --api 26 --install-dir /opt/android/toolchain/arm64api26

bash build/tools/make-standalone-toolchain.sh --install-dir=/opt/android/17-arm-gcc-4.9 --arch=armeabi-v7a --platform=android-17 --toolchain=arm-linux-androideabi-4.9

/opt/android-ndk/build/tools/make-standalone-toolchain.sh \
  --arch=arm \
  --platform=android-18 \
  --toolchain=arm-linux-androideabi-4.9 \
  --install-dir=/opt/android/standalone-toolchain/android-18

=== https://github.com/MysticTreeGames/Boost-for-Android.git

/opt/android-ndk/build/tools/make-standalone-toolchain.sh --platform=android-9 --install-dir=$HOME/android/standalone/toolchain

$NDK/build/tools/make-standalone-toolchain.sh \
    --platform=android-9 --toolchain=arm-linux-androideabi-4.6 \
    --install-dir=`pwd`/android-toolchain-arm

$ /opt/android-ndk/r10/build/tools/make-standalone-toolchain.sh \
  --arch=arm \
  --platform=android-12 \
  --toolchain=arm-linux-androideabi-4.8 \
  --install-dir=/opt/android-ndk/standalone/toolchain/android-12

### ### ###

USING THE ANDROID TOOLCHAIN AS A STANDALONE COMPILER
### http://www.cnblogs.com/qq78292959/archive/2011/11/02/2232965.html

Port glib to android
### http://mathslinux.org/?p=268
libiconv
gettext
libffi
glib
$ gl_cv_header_working_stdint_h=yes ./configure --prefix="${SYSROOT}/usr" --host=arm-linux-androideabi CFLAGS="--sysroot $SYSROOT" --enable-static
$ make -j5
$ make install
#
# glib
#### file android.cache
ac_cv_type_long_long=yes
glib_cv_stack_grows=no
glib_cv_uscore=no
ac_cv_func_posix_getpwuid_r=no
ac_cv_func_posix_getgrgid_r=no
##############################
$ ./configure --prefix="${SYSROOT}/usr" --host=arm-linux-androideabi CFLAGS="--sysroot $SYSROOT" --enable-static --cache-file=android.cache --disable-modular-tests

#
# C++ wchar_t/RTTI/exception
### http://blog.csdn.net/smfwuxiao/article/details/6587709

http://wiki.libsdl.org/Android
https://vec.io/posts/how-to-build-ffmpeg-with-android-ndk
http://www.kandroid.org/ndk/docs/STANDALONE-TOOLCHAIN.html

https://github.com/MysticTreeGames/Boost-for-Android
https://www.crystax.net/android/ndk.php
http://stackoverflow.com/questions/14036311/official-boost-library-support-for-android-and-ios

=== ...arm-linux-androideabi/bin/ld: error: cannot find -lrt
### Jamroot
# librt.a
lib rt : empty.c : <link>static ;

cp -t /opt/android-ndk/standalone/toolchain/android-12/sysroot/usr/lib ...librt.a

===
> build/tools/make_standalone_toolchain.py -h                               /opt/android/ndk
usage: make_standalone_toolchain.py [-h] --arch
                                    {arm,arm64,mips,mips64,x86,x86_64}
                                    [--api API]
                                    [--stl {gnustl,libc++,stlport}] [--force]
                                    [-v]
                                    [--package-dir PACKAGE_DIR | --install-dir INSTALL_DIR]

Creates a toolchain installation for a given Android target. The output of
this tool is a more typical cross-compiling toolchain. It is indended to be
used with existing build systems such as autotools.

optional arguments:
  -h, --help            show this help message and exit
  --arch {arm,arm64,mips,mips64,x86,x86_64}
  --api API             Target the given API version.
  --stl {gnustl,libc++,stlport}
                        C++ STL to use.
  --force               Remove existing installation directory if it exists.
  -v, --verbose         Increase output verbosity.
  --package-dir PACKAGE_DIR
                        Build a tarball and install it to the given directory.
                        If neither --package-dir nor --install-dir is
                        specified, a tarball will be created and installed to
                        the current directory.
  --install-dir INSTALL_DIR
                        Install toolchain to the given directory instead of
                        packaging.

###
wood> ndk-build V=1
rm -f /home/wood/build/androidbarcode/libs/arm64-v8a/lib*.so /home/wood/build/androidbarcode/libs/armeabi/lib*.so /home/wood/build/androidbarcode/libs/armeabi-v7a/lib*.so /home/wood/build/androidbarcode/libs/mips/lib*.so /home/wood/build/androidbarcode/libs/mips64/lib*.so /home/wood/build/androidbarcode/libs/x86/lib*.so /home/wood/build/androidbarcode/libs/x86_64/lib*.so
rm -f /home/wood/build/androidbarcode/libs/arm64-v8a/gdbserver /home/wood/build/androidbarcode/libs/armeabi/gdbserver /home/wood/build/androidbarcode/libs/armeabi-v7a/gdbserver /home/wood/build/androidbarcode/libs/mips/gdbserver /home/wood/build/androidbarcode/libs/mips64/gdbserver /home/wood/build/androidbarcode/libs/x86/gdbserver /home/wood/build/androidbarcode/libs/x86_64/gdbserver
rm -f /home/wood/build/androidbarcode/libs/arm64-v8a/gdb.setup /home/wood/build/androidbarcode/libs/armeabi/gdb.setup /home/wood/build/androidbarcode/libs/armeabi-v7a/gdb.setup /home/wood/build/androidbarcode/libs/mips/gdb.setup /home/wood/build/androidbarcode/libs/mips64/gdb.setup /home/wood/build/androidbarcode/libs/x86/gdb.setup /home/wood/build/androidbarcode/libs/x86_64/gdb.setup
[armeabi-v7a] Compile++ thumb: Barcode <= BarcodeJNI.cpp
/opt/android/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-g++ -MMD -MP -MF /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/App/BarcodeJNI.o.d -fpic -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes  -g -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp  -fno-exceptions -fno-rtti -mthumb -Os -DNDEBUG  -I"3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/include/opencv" -I"3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/include" -I/home/wood/build/androidbarcode/jni/Crypto/openssl -I/home/wood/build/androidbarcode/jni/Crypto/openssl/crypto -I/home/wood/build/androidbarcode/jni/Crypto/openssl/include -I/home/wood/build/androidbarcode/jni/Crypto/openssl/include/openssl -I/opt/android/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include -I/opt/android/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include -I/opt/android/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/backward -I/home/wood/build/androidbarcode/jni -DANDROID -fPIC -DANDROID -fsigned-char -fvisibility=hidden -Wa,--noexecstack -Wformat -Werror=format-security    -frtti -fexceptions  -isystem /opt/android/ndk/platforms/android-9/arch-arm/usr/include -c  /home/wood/build/androidbarcode/jni/App/BarcodeJNI.cpp -o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/App/BarcodeJNI.o 
[armeabi-v7a] SharedLibrary  : libBarcode.so
/opt/android/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-g++ -Wl,-soname,libBarcode.so -shared --sysroot=/opt/android/ndk/platforms/android-9/arch-arm /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/App/BarcodeJNI.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/CryptoWrap.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/openssl/crypto/mem_clr.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/openssl/crypto/aes/aes_cbc.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/openssl/crypto/aes/aes_core.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/openssl/crypto/modes/cbc128.o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/objs/Barcode/Crypto/openssl/crypto/sha/sha512.o 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_contrib.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_legacy.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_ml.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_stitching.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_objdetect.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_ts.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_videostab.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_calib3d.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_photo.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_video.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_features2d.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_highgui.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_androidcamera.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_flann.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_imgproc.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../libs/armeabi-v7a/libopencv_core.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/libtbb.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/liblibjpeg.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/liblibpng.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/liblibtiff.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/liblibjasper.a 3rdparty/OpenCV-2.4.5-android-sdk/sdk/native/jni/../3rdparty/libs/armeabi-v7a/libIlmImf.a /opt/android/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/libgnustl_static.a -lgcc -no-canonical-prefixes -march=armv7-a -Wl,--fix-cortex-a8   -Wl,--build-id -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--warn-shared-textrel -Wl,--fatal-warnings   -L/opt/android/ndk/platforms/android-9/arch-arm/usr/lib -lc -llog -lm -ldl -lz -lm -llog -landroid -lc -lm -o /home/wood/build/androidbarcode/obj/local/armeabi-v7a/libBarcode.so
[armeabi-v7a] Install        : libBarcode.so => libs/armeabi-v7a/libBarcode.so
install -p /home/wood/build/androidbarcode/obj/local/armeabi-v7a/libBarcode.so /home/wood/build/androidbarcode/libs/armeabi-v7a/libBarcode.so
/opt/android/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip --strip-unneeded  /home/wood/build/androidbarcode/libs/armeabi-v7a/libBarcode.so
[armeabi-v7a] Install        : libBarcodeEngine.so => libs/armeabi-v7a/libBarcodeEngine.so
install -p /home/wood/build/androidbarcode/obj/local/armeabi-v7a/libBarcodeEngine.so /home/wood/build/androidbarcode/libs/armeabi-v7a/libBarcodeEngine.so
/opt/android/ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip --strip-unneeded  /home/wood/build/androidbarcode/libs/armeabi-v7a/libBarcodeEngine.so

