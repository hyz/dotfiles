
    dd bs=4M if=path/to/archlinux-version-x86_64.iso of=/dev/sdx conv=fsync oflag=direct status=progress

### https://github.com/linrunner/TLP

advanced power management for linux

### https://wiki.archlinux.org/index.php/Laptop/Lenovo

https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Carbon
https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Carbon_(Gen_6)

### https://gist.github.com/mattiaslundberg/8620837

Minimal instructions for installing arch linux on an UEFI system with full system encryption using dm-crypt and luks

### https://wiki.archlinux.org/index.php/Installation_guide

https://wiki.archlinux.org/index.php/Installing_Arch_Linux_on_a_USB_key

install archlinux from archlinux

#### host

https://wiki.archlinux.org/index.php/Installation_guide
https://wiki.archlinux.org/index.php/System_backup
https://wiki.archlinux.org/index.php/Rsync#As_a_backup_utility
https://wiki.archlinux.org/index.php/Full_system_backup_with_SquashFS

    mkfs.ext4 -L Arch /dev/sdX1 ; mount /dev/sdX1 /mnt # root(/) partition
    mkdir /mnt/boot /mnt/home
    mkfs.vfat -F 32 -n EFI /dev/sdX2 ; mount /dev/sdXX /mnt/boot # /mnt/boot
    mkfs.ext4 -L Home /dev/sdX3 ; mount /dev/sdX3 /mnt/home # /home partition
    mkswap /dev/sdX4 ; swapon /dev/sdX4
    e2label /dev/sdX1 '/' # root=LABEL=/ rw

    pacman -Ql arch-install-scripts

    vim /etc/pacman.d/mirrorlist
    pacstrap /mnt base linux linux-firmware
        parted openssh dhcpcd netctl wpa_supplicant dialog net-tools sudo vim
        grub syslinux
        efibootmgr zsh git rsync keychain ripgrep bat

    genfstab -pU /mnt | tee /mnt/etc/fstab
    cp /etc/netctl/XXX /mnt/etc/netctl/

    vim /mnt/etc/{fstab,default/grub,hostname,locale.gen,hosts} #/etc/locale.conf, /etc/vconsole.conf
    vimdiff {,/mnt}/etc/grub.d/40_custom

    diff {,/mnt}/etc/pacman.d/mirrorlist

    wood> rsync -a .git /mnt/home/wood/

    arch-chroot /mnt

#### chroot

    mount -va
    ln -sf /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime
    locale-gen

    ## https://wiki.archlinux.org/index.php/Systemd-boot
    bootctl --path=/boot install
    bootctl update
    vim /boot/syslinux/syslinux.cfg # root=LABEL=/ rw

    mkdir /esp ; mount /dev/nvme0n1p1 /esp
    grub-install --target=i386-pc --recheck /dev/sdX
    #       grub-install --target=x86_64-efi --efi-directory=/esp --bootloader-id=grub --modules="part_gpt part_msdos"
    #       # https://wiki.archlinux.org/index.php/GRUB#UEFI_systems
    grub-mkconfig -o /boot/grub/grub.cfg
    #       grub-mkconfig -o /boot/grub/grub.cfg
    #       vimdiff /esp/EFI/grub/grub.cfg /boot/grub/grub.cfg
    mkinitcpio -p linux

    pacman -S gnupg pass dosfstools gptfdisk ntfs-3g mtools tmux pacman-contrib lm_sensors
    pacman -S base-devel man-db man-pages
        wireguard-tools 
    pacman -S xorg-server xterm fvwm sx xorg-xinit xdg-utils rxvt-unicode gparted bashrun rofi redshift unclutter \
        xorg-xmessage xorg-xev xorg-xwininfo xorg-xprop xorg-xmag \
        feh scrot imagemagick mplayer \
        alsa-utils mpd mpc
    pacman -S fcitx-rime fcitx-gtk3 fcitx-qt5 fcitx-configtool sdcv
    pacman -S firefox chromium wireshark \
        w3m kcptun privoxy proxychains tcpdump
    pacman -S qemu dosbox wine
    pacman -S code yarn pandoc cmake

    systemctl enable dhcpcd@ens11.service
        netctl enable ethernet-static # systemctl enable netctl
        #! systemctl enable netctl-auto@ethernet-dhcp
    systemctl enable sshd

    passwd
    useradd -Um -u 1000 -G wheel -s `which zsh` wood ; passwd wood
    visudo
    usermod -G kvm,video,audio,mpd,wireshark -a wood

    sudo -iu wood -- git checkout
    sudo -iu wood -- fc-cache -fv

    exit

#### host

    # su - wood
    rsync -va {.gnupg,.ssh,.git,.password-store} /mnt/home/wood/
    rsync -vaR .local/share/fonts /mnt/home/wood/
    rsync -vaR .config/*.{conf,json} .config/rslsync /mnt/home/wood/
    rsync -vaR .local/*.json /mnt/home/wood/
    rsync -vr  .stardict /mnt/home/wood/
    pacman -Qe > /mnt/home/wood/pacman-Qe

#### reboot

### http://www.volkerschatz.com/unix/archclone.html

https://wiki.archlinux.org/index.php/Disk_cloning
https://wiki.archlinux.org/index.php/Migrate_installation_to_new_hardware

### https://www.parabola.nu/

https://wiki.parabola.nu/Migration_from_the_GNU/Linux_distribution_of_Arch

### https://github.com/yantis/instant-archlinux-on-mac

https://wiki.archlinux.org/index.php/Clover
https://wiki.archlinux.org/index.php/Persistent_block_device_naming

### https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface

    -drive if=pflash,format=raw,readonly,file=/usr/share/ovmf/ovmf_code_x64.bin \
    -drive if=pflash,format=raw,file=my_uefi_vars.bin

    bcdedit /set "{bootmgr}" path "\EFI\path\to\app.efi"

### ABS https://wiki.archlinux.org/index.php/Arch_Build_System

https://www.archlinux.org/svn/

    svn checkout --depth=empty svn://svn.archlinux.org/packages
    cd packages
    svn update <your-package-name>

    svn checkout --depth=empty svn://svn.archlinux.org/community
    cd community
    svn update wine

    svn checkout svn://svn.archlinux.org/packages/openssl-1.0

https://linuxtoy.org/archives/archlinux-pkgbuild-aur-and-abs.html
Archlinux 的灵魂──PKGBUILD、AUR 和 ABS (1) 

### https://arch-anywhere.org/

    Bringing you Arch - Anywhere

### https://aur.archlinux.org/packages/?SB=v&SO=d&O=0&PP=50 # aur voted

    makepkg --noextract
    makepkg --nobuild --nodeps
    makepkg --skippgpcheck

    makepkg --skippgpcheck --nodeps --nobuild

    pacman -S --clean
    pacman -Qs android
    pacman -Qe

### https://wiki.archlinux.org/index.php/Pacman_tips

    $ pacman -Qs android

local/android-ndk r10c-2
    Android C/C++ developer kit
local/android-platform 21_r01-1
    Android SDK Platform, latest API
local/android-sdk r23.0.5-1
    Google Android SDK
local/android-sdk-build-tools r21.1.1-1
    Build-Tools for Google Android SDK (aapt, aidl, dexdump, dx, llvm-rs-cc)
local/android-sdk-platform-tools r21-1
    Platform-Tools for Google Android SDK (adb and fastboot)
local/android-tools 5.0.0_r7-1
    Android platform tools
local/android-udev r124-1
    Udev rules to connect Android devices to your linux box

### https://wiki.archlinux.org/index.php/Netctl

netctl

    wifi-menu
    netctl list
    netctl stop-all
    netctl start wireless-static
    netctl enable ethernet-static

### netstat, nslookup

    pacman -S dnsutils
    pacman -S net-tools

### https://wiki.archlinux.org/index.php/Archiso

    cp -r /usr/share/archiso/configs/releng myiso
    cd myiso
    ...
    ./build.sh -v

    ...
    # rm -v work/build.make_*

https://wiki.archlinux.org/index.php/Installation_guide
https://wiki.archlinux.org/index.php/Install_from_existing_Linux#From_a_host_running_another_Linux_distribution
http://mirrors.163.com/archlinux/iso/ archlinux-bootstrap-2016.11.01-x86_64.tar.gz
https://wiki.archlinux.org/index.php/Archboot


p7zip unzip

rate-mirrors --save=/tmp/mirrors arch --max-delay=21600

