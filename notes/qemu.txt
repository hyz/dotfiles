### http://chuansong.me/n/1271580847916
    virtio-gps
    x86_64-softmmu/qemu-system-x86_64 -m 4G --enable-kvm -cpu host -smp 2 \
        -usb -usbdevice tablet \
        -vga virtio \
        -drive file=/home/test.img,if=virtio \
        -spice gl=on,unix,addr=/home/spice.sock,disable-ticketing

### share folder
http://smilejay.com/2012/11/how-to-mount-a-qcow2-image/
    qemu-nbd
http://smilejay.com/2012/08/qemu-image-format/
    qemu-img -h ... ndb vvfat qcow2 host_device vpc sheepdog ...
    vpc
        兼容Microsoft的Virtual PC的镜像文件格式（Virtual Hard Disk format）。
    sheepdog
        日本NTT实验室发起的，为QEMU/KVM做的一个开源的分布式存储系统，为KVM虚拟提供块存储
        http://www.osrg.net/sheepdog/
        http://sheepdog.taobao.org/

http://www.linux-kvm.org/page/9p_virtio
http://www.linux-kvm.org/page/9p_virtio
http://wiki.qemu.org/Documentation/9psetup
https://vincent.bernat.im/en/blog/2012-network-lab-kvm.html
http://unix.stackexchange.com/questions/90423/can-virtfs-9p-be-used-as-root-file-system
http://blog.allenx.org/2015/07/03/virtio-9p-note
http://openwares.net/linux/kvm_guest_access_host_dir.html
    ## host
    # kvm ...
        -fsdev local,security_model=passthrough,id=fsdev0,path=/mnt/share
        -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_tag=hostshare

    ## guest
    # mount -t 9p -o trans=virtio[,version=9p2000.L] hostshare /mnt/point

https://en.wikibooks.org/wiki/QEMU/Devices/Storage
    qemu -drive file=fat:rw:some/directory ...

# /usr/bin/qemu-kvm -m 1024 -name f15 -drive file=/images/f15.img,if=virtio
    -fsdev local,security_model=passthrough,id=fsdev0,path=/tmp/share -device virtio-9p-pci,id=fs0,fsdev=fsdev0,mount_tag=hostshare
## guest
# mkdir /tmp/host_files
# mount -t 9p -o trans=virtio,version=9p2000.L hostshare /tmp/host_files

### http://www.linux-kvm.org/page/Networking
#: # qemu-ifup script
#: switch=br0
#: # tunctl -u `whoami` -t $1 (use ip tuntap instead!)
#: ip tuntap add $1 mode tap user `whoami`
#: ip link set $1 up
#: sleep 0.5s
#: # brctl addif $switch $1 (use ip link instead!)
#: ip link set $1 master $switch

#: # generate a random mac address for the qemu nic
#: #printf 'DE:AD:BE:EF:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256))

### http://fedoraproject.org/wiki/Networking/Bridging
### https://wiki.archlinux.org/index.php/QEMU#Tap_networking_with_QEMU
### https://wiki.archlinux.org/index.php/Network_bridge
### https://wiki.archlinux.org/index.php/VLAN
###

ip link set tap0 nomaster
ip tuntap del tap0 mode tap

###
    http://www.cnblogs.com/vimisky/p/5686876.html
    http://www.linux-kvm.org/page/10G_NIC_performance:_VFIO_vs_virtio

    -device virtio-net-pci,netdev=net0 -netdev tap,id=net0,script=/etc/qemu-ifup

> qemu-kvm -kernel arch/x86/boot/bzImage -initrd initramfs \
       -device e1000,netdev=network0,mac=52:55:00:d1:55:01 \
       -netdev tap,id=network0,ifname=tap0,script=no,downscript=no \
       -append "ip=dhcp rd.shell=1 console=ttyS0" \
       -nographic

### http://www.crifan.com/tag/qemu/

###
-cdrom /mnt/WindowsXP.SP2.iso
-soundhw ac97 -net nic,model=virtio -net user

qemu-system-i386 -enable-kvm -boot c -drive file=/blah/winxp.img,media=disk,if=virtio,cache=none -m 1500 -localtime -usb -usbdevice tablet -sdl -vga std -no-frame -name xp -net user,smb=/blah/shared -net nic,model=rtl8139 -daemonize

### qemu efi bios
http://unix.stackexchange.com/questions/52996/how-to-boot-efi-kernel-using-qemu-kvm

Update: OVMF supports -boot since r13683, and supports -kernel -append -initrd since r13923.
    Download OVMF-0.1+r14071-1.1.x86_64.rpm or newer version.
    Extract bios.bin from the rpm: rpm2cpio OVMF-0.1+r14071-1.1.x86_64.rpm | cpio -idmv
    Specify firmware parameter for QEMU: qemu-kvm -bios ./usr/share/qemu-ovmf/bios/bios.bin -m 1G -cdrom boot.iso (Tested with Fedora's boot.iso created with special measures)
I also tested qemu -kernel -append -initrd with kernel 3.5, 3.6, and 3.8.

### qemu SLIC and RSDT #Vendor ID
### qemu 2.6, future
https://bugzilla.redhat.com/show_bug.cgi?id=1248758
###
https://lists.gnu.org/archive/html/qemu-devel/2011-03/msg03080.html

########### configure qemu-2.6.0-rc3
# sudo pacman -Sy ceph libiscsi spice-protocol

./configure --prefix=/opt --sysconfdir=/etc --audio-drv-list='alsa' \
      --python=/usr/bin/python2 --smbd=/usr/bin/smbd \
      --libexecdir=/opt/lib/qemu \
      --disable-gtk --enable-linux-aio --enable-seccomp \
      --enable-spice --localstatedir=/var \
      --enable-tpm \
      --enable-modules --enable-{rbd,libiscsi,curl} \
      --target-list=x86_64-linux-user,i386-linux-user,x86_64-softmmu

https://bbs.archlinux.org/viewtopic.php?id=162768
  KVM VGA-Passthrough using the new vfio-vga support in kernel =>3.9

http://blog.csdn.net/zoomdy/article/details/50954190
    dd if=/dev/zero of=usbdisk.img bs=512 count=102400
    mkfs.ext2 usbdisk.img

    (qemu) drive_add 0 id=my_usb_disk,if=none,file=usbdisk.img
    OK
    (qemu) device_add usb-storage,id=my_usb_disk,drive=my_usb_disk
    (qemu) device_del my_usb_disk


apt-get install qemu-kvm
apt-get install bridge-utils user-mode-linux # tun/tap

uml-utilities

### kvm -curses -serial stdio -m 2048M -hda /dev/sda5 -boot c -net nic -net user

### kvm, archlinux guest, ubuntu12.04 host
> cat /etc/issue
Ubuntu 12.04.5 LTS \n \l
>
> qemu-system-x86_64 --version                                                            ~
QEMU emulator version 1.0 (qemu-kvm-1.0), Copyright (c) 2003-2008 Fabrice Bellard
>
> wget .../archlinux-2016.08-1-archboot-network.iso
>
> sudo chgrp kvm /dev/sda5
> parted /dev/sda5
>>> mklabel msdos
>>> mkpart primary ext3 ... ...
>>> mkpart primary linux-swap ... ...
>

### http://smilejay.com/2013/12/qemu-kvm-install-guest-in-text-mode/
### http://smilejay.com/2012/08/kvm-no-graphics/
    mount -o loop CentOS-6.4-x86_64-minimal.iso /mnt
    qemu-system-x86_64 --enable-kvm -m 1G -smp 2 -bios /usr/local/share/qemu/bios.bin \
        -hda vdisk-hda.img -cdrom CentOS-6.4-x86_64-minimal.iso \
        -kernel /mnt/isolinux/vmlinuz -append console=ttyS0 -initrd /mnt/isolinux/initrd.img \
        --nographic

### iPAX + MBR/msdos + syslinux + arch/kernel-nomodeset

### boot with archlinux-2016.08-1-archboot-network.iso
> kvm -curses -serial stdio -m 2048M -hda /dev/sda5 \
    -cdrom archlinux-2016.08-1-archboot-network.iso -boot d -net nic -net user
Ctrl-B
... exit
... <Ctrl-N>
... <Tab>
... ... ... kernel ... nomodeset initrd....
                       ^^^^^^^^^
... <Enter>

### syslinux nomodeset
> cat /boot/syslinux/syslinux.cfg                                  ~
PATH /boot/syslinux

PROMPT 1
TIMEOUT 100
ONTIMEOUT arch

LABEL arch
  LINUX /boot/vmlinuz-linux
  APPEND root=UUID=e2ce3e18-1136-4c36-915a-32c27cd816d8 rootfstype=ext3 rw rootflags=rw,relatime,data=ordered cgroup_disable=memory nomodeset
  INITRD /boot/intel-ucode.img,/boot/initramfs-linux.img

LABEL arch-fallback
  LINUX /boot/vmlinuz-linux
  APPEND root=UUID=e2ce3e18-1136-4c36-915a-32c27cd816d8 rootfstype=ext3 rw rootflags=rw,relatime,data=ordered cgroup_disable=memory nomodeset
  INITRD /boot/intel-ucode.img,/boot/initramfs-linux-fallback.img


