project user-config ; 

# using boost : 1.59 : <include>/workspace/boost_1_59_0 <library>/workspace/boost_1_59_0/stage/lib ; 
    ##then:
    # import boost ; 
    # boost.use-project 1.39 ; 
    # exe hello : hello.cpp : <library>/boost//thread ; 

### gcc
#using gcc : : : <cxxflags>-std=c++1y ;
#    <compileflags>"-std=c++11"
# using gcc : 4.8 : /opt/bin/g++ : <cxxflags>-std=c++11 ;
#    <compileflags>"-std=c++11"
# using gcc ;

#using clang : : : <compileflags>"-stdlib=libc++" <compileflags>"-std=c++11" ;
#using darwin : : : <compileflags>"-stdlib=libc++" <compileflags>"-std=c++11" ;

### msvc
#using msvc ;
#
#use-project boost : /cygdrive/d/home/wood/workspace/boost_1_59_0 ; 

###
### http://libcinder.org/docs/v0.8.5/_cinder_boost.html
# ./bootstrap.sh â€“with-libraries=filesystem,system,date_time
# 
# using clang : osx
#     : xcrun clang -arch i386 -arch x86_64 -stdlib=libc++ -std=c++11 -mmacosx-version-min=10.7 -fvisibility-inlines-hidden
#     ;
# ##b2 -a -j4 toolset=clang-osx link=static stage # cp stage/lib/*.a ../lib/macosx
# 
# using clang : ios
#     : xcrun clang -arch armv7 -arch armv7s -stdlib=libc++ -std=c++11 -miphoneos-version-min=5.0 -fvisibility-inlines-hidden -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk/
#     ;
# ##b2 -a -j4 toolset=clang-ios link=static stage
# 
# using clang : ios_sim
#     : xcrun clang -arch i386 -stdlib=libc++ -std=c++11 -miphoneos-version-min=5.0 -fvisibility-inlines-hidden -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/
#     ;
# ##b2 -a -j4 toolset=clang-ios_sim link=static stage

### BOOST
#using darwin : 8.2-ios
#   : /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch armv7 -arch armv7s -arch arm64 -fvisibility=hidden -fvisibility-inlines-hidden -DBOOST_AC_USE_PTHREADS -DBOOST_SP_USE_PTHREADS -std=c++11 -stdlib=libc++
#   : <striper> <root>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer
#   : <architecture>arm <target-os>ios
#   ;
#using darwin : 8.2-iossim
#   : /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch i386 -arch x86_64 -fvisibility=hidden -fvisibility-inlines-hidden -DBOOST_AC_USE_PTHREADS -DBOOST_SP_USE_PTHREADS -std=c++11 -stdlib=libc++
#   : <striper> <root>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer
#   : <architecture>x86 <target-os>ios
#   ;

# using gcc :
#     : arm-linux-androideabi-g++
#     : <architecture>arm <abi>aapcs <target-os>linux <binary-format>elf <address-model>32
#        <archiver>arm-linux-androideabi-ar
#        <compileflags>-fexceptions
#        <compileflags>-frtti
#        <compileflags>-fpic
#        <compileflags>-ffunction-sections
#        <compileflags>-funwind-tables
#        <compileflags>-D__ARM_ARCH_5__
#        <compileflags>-D__ARM_ARCH_5T__
#        <compileflags>-D__ARM_ARCH_5E__
#        <compileflags>-D__ARM_ARCH_5TE__
#        <compileflags>-Wno-psabi
#        <compileflags>-march=armv5te
#        <compileflags>-mtune=xscale
#        <compileflags>-msoft-float
#        <compileflags>-mthumb
#        <compileflags>-Os
#        <compileflags>-O2
#        <compileflags>-fomit-frame-pointer
#        <compileflags>-fno-strict-aliasing
#        <compileflags>-finline-limit=64
#        <compileflags>-Wa,--noexecstack
#        <compileflags>-DNDEBUG
#        #<compileflags>-DANDROID
#        #<compileflags>-g
#            #<compileflags>-I$(NDK)/platforms/android-12/arch-arm/usr/include
#            #<compileflags>-I$(NDK)/sources/cxx-stl/gnu-libstdc++/4.9/include
#            #<compileflags>-I$(NDK)/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi/include
#        # @Moss - Above are the 'oficial' android flags
#        <compileflags>--sysroot=$(SYSROOT)
#        <compileflags>-fvisibility=hidden
#        <compileflags>-fvisibility-inlines-hidden
#        <compileflags>-fdata-sections
#        <cxxflags>-D__arm__
#        <cxxflags>-D_REENTRANT
#        <cxxflags>-D_GLIBCXX__PTHREADS
#        <cxxflags>-std=c++1y
#     #: <architecture>arm <abi>aapcs <target-os>linux <binary-format>elf <address-model>32
#     ;

