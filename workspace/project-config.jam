# export PATH=$PATH:/opt/android/standalone-toolchain/gcc-4.9-android-18/bin

#import os ;
#path-constant HOME : [ os.environ HOME ] ;
path-constant BOOST_ROOT : /opt/boost_1_60_0 ;
#path-constant BOOST_ROOT : [ os.environ BOOST_ROOT ] ;

use-project boost : $(BOOST_ROOT) ; # /boost//headers

#using msvc ; #: : : <architecture>x86 <runtime-link>static <link>static ;
#

using gcc : : : <cxxflags>-std=c++1y ;
using clang : : : <cxxflags>-std=c++1y <cxxflags>"-stdlib=libc++" <linkflags>"-stdlib=libc++" ;
#using clang : : clang++-3.6 : <cxxflags>-std=c++1y <cxxflags>"-stdlib=libc++" <linkflags>"-stdlib=libc++" ;

# ./bjam --build-type=complete --layout=tagged
#  variant=debug|release            Select the build variant
#  link=static|shared                    Whether to build static or shared libraries
#  threading=single|multi            Whether to build single or multithreaded binaries
#  runtime-link=static|shared      Whether to link to static or shared C and C++ runtime.

### # path-constant NDK : /opt/android-ndk ;
### 
### path-constant TOOLCHAIN : /opt/android/standalone-toolchain/gcc-4.9-android-18 ;
### #path-constant BIN : $(TOOLCHAIN)/bin ;
### path-constant SYSROOT : $(TOOLCHAIN)/sysroot ;
### 
### using gcc :  : arm-linux-androideabi-g++
###     :
###     <archiver>arm-linux-androideabi-ar
###     <compileflags>-fexceptions
###     <compileflags>-frtti
###     <compileflags>-fpic
###     <compileflags>-ffunction-sections
###     <compileflags>-funwind-tables
###     <compileflags>-D__ARM_ARCH_5__
###     <compileflags>-D__ARM_ARCH_5T__
###     <compileflags>-D__ARM_ARCH_5E__
###     <compileflags>-D__ARM_ARCH_5TE__
###     <compileflags>-Wno-psabi
###     <compileflags>-march=armv5te
###     <compileflags>-mtune=xscale
###     <compileflags>-msoft-float
###     <compileflags>-mthumb
###     <compileflags>-Os
###     <compileflags>-O2
###     <compileflags>-fomit-frame-pointer
###     <compileflags>-fno-strict-aliasing
###     <compileflags>-finline-limit=64
###     <compileflags>-Wa,--noexecstack
###     <compileflags>-DANDROID
###     <compileflags>-D__ANDROID__
###     <compileflags>-DNDEBUG
###     #<compileflags>-g
###         #<compileflags>-I$(NDK)/platforms/android-12/arch-arm/usr/include
###         #<compileflags>-I$(NDK)/sources/cxx-stl/gnu-libstdc++/4.9/include
###         #<compileflags>-I$(NDK)/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi/include
###     # @Moss - Above are the 'oficial' android flags
###     <compileflags>--sysroot=$(SYSROOT)
###     <architecture>arm
###     <compileflags>-fvisibility=hidden
###     <compileflags>-fvisibility-inlines-hidden
###     <compileflags>-fdata-sections
###     <cxxflags>-D__arm__
###     <cxxflags>-D_REENTRANT
###     <cxxflags>-D_GLIBCXX__PTHREADS
###     <cxxflags>-std=c++1y
###     ;
### 
### # ./bjam --build-type=complete --layout=tagged
### #  variant=debug|release            Select the build variant
### #  link=static|shared                    Whether to build static or shared libraries
### #  threading=single|multi            Whether to build single or multithreaded binaries
### #  runtime-link=static|shared      Whether to link to static or shared C and C++ runtime.
### 
### ### http://developer.android.com/ndk/guides/standalone_toolchain.html
### ### clang
### # export NDK=/opt/android-ndk-r10c
### # export SYSROOT=$NDK/platforms/android-21/arch-arm
### #
### # $NDK/toolchains/llvm-3.5/prebuilt/linux-x86/bin/clang --sysroot=$SYSROOT \
### #   -target armv7-none-linux-androideabi -gcc-toolchain $NDK/toolchains/arm-linux-androideabi-4.8/prebuilt/linux-x86 \
### #   -c hello-jni.c
### #
### #   -target i686-none-linux-android
### #

