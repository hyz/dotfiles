import os ;

path-constant TOP : . ;
path-constant HOME : [ os.environ HOME ] ;
path-constant BOOST_ROOT : /opt/boost ;

use-project /boost : $(BOOST_ROOT) ;
use-project /urdl : urdl-0.1/build ;

project yx-shk-racing
    : requirements
        <toolset>gcc:<cxxflags>-std=c++11
        <toolset>gcc:<cxxflags>"-Wno-unused-local-typedefs"
        <toolset>clang:<cxxflags>"-stdlib=libc++"
        <toolset>clang:<linkflags>"-stdlib=libc++"
        <include>.
        # <include>include
        <include>$(BOOST_ROOT)
        <threading>multi
        # <variant>debug:<cxxflags>"-rdynamic"
        # <variant>debug:<location>"bin/debug"
        <define>LIBICONV_PLUG
        <define>BOOST_SPIRIT_UNICODE=1
        <define>IOS_DEBUG
    : default-build release
    ;

#local magick_cxxflags = [ SHELL "Magick++-config --cxxflags |tr '\n' ' '" ] ;
#local magick_linkflags = [ SHELL "Magick++-config --ldflags |tr '\n' ' '" ] ;
#alias magick : : : : <linkflags>$(magick_linkflags) <cxxflags>$(magick_cxxflags) ;

lib ssl crypto : : <search>/usr/lib64 <link>shared ;
# lib curl : : <link>shared ;

# lib hiredis ;
# lib iconv : : <name>iconv <search>/usr/local/lib ;
# lib jpeg png ;
# lib xml2 bz2 z m ;
# lib lcms : : <name>lcms ;
# lib tiff : : <name>tiff ;
# lib freetype : : <name>freetype ; 
# lib jasper : : <name>jasper ;
# # lib png12 : : <name>png12 ;
# lib Xext : : <name>Xext ;
# lib SM : : <name>SM ;
# lib ICE : : <name>ICE ;
# lib X11 : : <name>X11 ;
# lib gomp : : <name>gomp ;

lib our
    : racing.cpp server.cpp ioctx.cpp
        myerror.cpp log.cpp dbc.cpp util.cpp json2.cpp
        yx_config.cpp
        mysql//client redis//client
        rapidjson//json
        /boost//system
        /boost//filesystem
        /boost//regex
        /boost//random
        /boost//thread
        /boost//timer
        /boost//program_options
        /urdl//urdl
   : <link>static # <cflags>-pg <linkflags>-pg
     #<include>urdl-0.1/include
   ;

exe shk-racing-server
    : main.cpp buildinfo.cpp our ssl
    ;
exe shk-racing-nc
    : shk-racing-nc.cpp /boost//system : <link>static
    ;
exe shk-racing-proxy
    : shk-racing-proxy.cpp our /boost//system /boost//program_options
    : <link>static
    ;
exe shk-racing-protocol
    : shk-racing-protocol.cpp
    : <link>static
    ;
exe policy_file_request
    : policy_file_request.cpp /boost//system /boost//program_options
    : <link>static
    ;

install usr/local/bin : shk-racing-server shk-racing-nc policy_file_request shk-racing-proxy shk-racing-protocol ;
#install bin : shk-racing-server : <install-dependencies>on <install-type>EXE <install-type>LIB ;

actions buildinfo
{
    Revision=0
    if which svn >/dev/null 2>&1 ; then
        Revision=`svn info |grep '^Rev'`
    fi

    cat > $(<) <<_EoF
#define BUILD_REV "$Revision"
#define BUILD_DATE "`date`"
#define BUILD_USER "$USER"

#include "log.h"
void print_buildinfo(int bg) {
    //std::cout << BUILD_REV << "\n";
    //std::cout << BUILD_DATE <<" "<< BUILD_USER << "\n";
    //if (bg)
    {
        LOG << BUILD_REV;
        LOG << BUILD_DATE << BUILD_USER;
    }
}
_EoF
}

make buildinfo.cpp : our : @buildinfo ;

# lib smsapi : wrapsms.cpp libEUCPCommC//libEUCPCommC.a : <link>static ;

# make proto/message.pb.cc : proto/message.proto : @protoc ;
# 
# actions protoc
# {
#     protoc $(>) --cpp_out=.
# }
# lib protobuf : : <name>protobuf <search>/usr/lib : : <include>/usr/include ;

