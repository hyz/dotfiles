import os ;

path-constant TOP : . ;
path-constant HOME : [ os.environ HOME ] ;
path-constant BOOST_ROOT : /opt/boost ;

use-project /boost : $(BOOST_ROOT) ;

project
    : requirements
        <toolset>gcc:<cxxflags>-std=c++0x
        <toolset>clang:<cxxflags>"-stdlib=libc++"
        <toolset>clang:<linkflags>"-stdlib=libc++"
        <include>.
        <include>$(BOOST_ROOT)
        <threading>multi
        # <variant>debug:<cxxflags>"-rdynamic"
        # <variant>debug:<location>"bin/debug"
        <define>LIBICONV_PLUG
    : default-build release
    ;

local magick_cxxflags = [ SHELL "Magick++-config --cxxflags |tr '\n' ' '" ] ;
local magick_linkflags = [ SHELL "Magick++-config --ldflags |tr '\n' ' '" ] ;
alias magick : : : : <linkflags>$(magick_linkflags) <cxxflags>$(magick_cxxflags) ;

lib mysqlclient : : <name>mysqlclient <search>/usr/lib64/mysql <link>shared ;
lib ssl : : <link>shared ;
lib hiredis ;

# lib iconv : : <name>iconv <search>/usr/local/lib ;
# lib ssl crypto ;
# lib jpeg png ;
# lib xml2 bz2 z m ;
# lib lcms : : <name>lcms ;
# lib tiff : : <name>tiff ;
# lib freetype : : <name>freetype ; 
# lib jasper : : <name>jasper ;
# # lib png12 : : <name>png12 ;
# lib Xext : : <name>Xext ;
# lib SM : : <name>SM ;
# lib ICE : : <name>ICE ;
# lib X11 : : <name>X11 ;
# lib gomp : : <name>gomp ;

lib our
    : main.cpp service.cpp client.cpp chat.cpp bars.cpp
        mail.cpp iapbuf.cpp upbuf.cpp
        ios_push.cpp proto_im.cpp proto_http.cpp async.cpp
        myerror.cpp log.cpp dbc.cpp jss.cpp util.cpp
        dynamic_state.cpp
        bottle_drifting.cpp
        bgadmin.cpp
        ssl
        libjson//libjson.a
        /boost//system
        /boost//filesystem
        /boost//regex
        /boost//random
        /boost//thread
        /boost//timer
        magick
    : <link>static # <cflags>-pg <linkflags>-pg
    ;

exe moon
    : buildinfo.cpp our mysqlclient hiredis magick
    ;

install usr/local/bin : moon ;
#install bin : moon : <install-dependencies>on <install-type>EXE <install-type>LIB ;

actions buildinfo
{
    cat > $(<) <<_EoF
#define BUILD_REV "`svn info |grep '^Rev'`"
#define BUILD_DATE "`date`"
#define BUILD_USER "$USER"

#include "log.h"
void print_buildinfo() {
    LOG_I << BUILD_REV;
    LOG_I << BUILD_DATE <<" "<< BUILD_USER;
}
_EoF
}

make buildinfo.cpp : our : @buildinfo ;

# lib smsapi : wrapsms.cpp libEUCPCommC//libEUCPCommC.a : <link>static ;

# make proto/message.pb.cc : proto/message.proto : @protoc ;
# 
# actions protoc
# {
#     protoc $(>) --cpp_out=.
# }
# lib protobuf : : <name>protobuf <search>/usr/lib : : <include>/usr/include ;

