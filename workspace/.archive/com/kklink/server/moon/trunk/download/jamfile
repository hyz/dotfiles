import os ;

local HOME = [ os.environ HOME ] ;
local BOOST = $(HOME)/boost ;

path-constant CUR_DIR : . ;

project
    : requirements
        <cxxflags>-std=c++0x
        # <cflags>-std=c++11 # <cflags>-pg <linkflags>-pg
    ;

lib jpeg : : <name>jpeg ;
lib png : : <name>png ;
lib magick++ : : <name>GraphicsMagick++ <search>/usr/local/lib/ : : <include>/usr/local/include/GraphicsMagick ;
lib magick : : <name>GraphicsMagick <search>/usr/local/lib/ : : <include>/usr/local/include/GraphicsMagick ;

lib lcms : : <name>lcms ;
lib tiff : : <name>tiff ;
lib freetype : : <name>freetype ;
lib jasper : : <name>jasper ;
# lib png12 : : <name>png12 ;
lib Xext : : <name>Xext ;
lib SM : : <name>SM ;
lib ICE : : <name>ICE ;
lib X11 : : <name>X11 ;
lib bz2 : : <name>bz2 ;
lib xml2 : : <name>xml2 ;
lib z : : <name>z ;
lib m : : <name>m ;
lib gomp : : <name>gomp ;
lib ssl : : <name>ssl ;
lib pthread : : <name>pthread ;

alias lib3p
    :
        magick++ magick
        lcms
        tiff
        jasper
        jpeg
        png
        freetype ICE Xext SM X11
        bz2
        xml2
        z
        m
        gomp
        : <link>shared
        ;


obj my-err : ../myerror.cpp ;
obj jss-obj : ../jss.cpp ;
obj log-obj : ../log.cpp ;
obj util.o : ../util.cpp ;

exe download
    : main.cpp jss-obj log-obj my-err util.o ../boost//boost ../libjson//libjson.a lib3p ssl
    : <cflags>"-g"
    ;

install $(TOP)/usr/local/bin : download ;

