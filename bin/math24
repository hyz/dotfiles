#!/usr/bin/env python3
import sys
from itertools import combinations

add = lambda x,y: x+y ; add.__name__ = '+'
sub = lambda x,y: x-y ; sub.__name__ = '-'
mul = lambda x,y: x*y ; mul.__name__ = '*'
def div(x,y): #div = lambda x,y: x/y
    if y==0: return None
    return x/y
div.__name__ = '/'

his={} #{ (None,0):1, (None,1):1, (None,2):1, (None,3):1, (None,4):1 }

def walk(lv, lis, fres, *explis):
    if lis[0] is None:
        return
    if len(lis) == 1:
        if lis[0] == 24:
            for f,x,y in explis:
                print('(',x,f.__name__,y,'=',f(x,y),')',sep='',end='  ')
            print()
        return
    for x,y in combinations(lis, 2):
        li = lis[:]
        li.remove(x) ; li.remove(y)
        for f in add,sub,mul,div:
            z = f(x,y) ; fr=fres+[(f,z)] ; r = (f,x,y)
            kfr = tuple(fr)
            if kfr not in his:
                his[kfr] = 1
                walk(lv+1, [z] + li, fr, *explis, r)
            y,x = x,y
            z = f(x,y) ; fr=fres+[(f,z)] ; r = (f,x,y)
            kfr = tuple(fr)
            if kfr not in his:
                his[kfr] = 1
                walk(lv+1, [z] + li, fr, *explis, r)

walk(0, [ int(x) for x in sys.argv[1:5] ], [])

